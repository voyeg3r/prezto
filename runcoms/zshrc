#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#
ZDOTDIR=~/.dotfiles

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/zprezto/init.zsh"
fi

# Customize to your needs...

autoload -U compinit
compinit

autoload -U colors && colors
export SPROMPT="Correct $fg[red]%R$reset_color to $fg[green]%r?$reset_color (Yes, No, Abort, Edit) "

# Treat these characters as part of a word.
WORDCHARS='*?_-.[]~&;!#$%^(){}<>'

# Increment integer argument
autoload incarg
zle -N incarg
bindkey '^x=' incarg

# now pressing Esc-e loads the line history for edit
autoload -U edit-command-line
zle -N edit-command-line
bindkey '\ee' edit-command-line

# 'ctrl-x r' will complete the 12 last modified (mtime) files/directories
zle -C newest-files complete-word _generic
bindkey '^Xr' newest-files
zstyle ':completion:newest-files:*' completer _files
zstyle ':completion:newest-files:*' file-patterns '*~.*(omN[1,12])'
zstyle ':completion:newest-files:*' menu select yes
zstyle ':completion:newest-files:*' sort false
zstyle ':completion:newest-files:*' matcher-list 'b:=*' # important

# most-recent-file
zstyle ':completion:most-recent-*::::' completer _menu _files _match
zstyle ':completion:most-recent-*:*' file-sort modification
zstyle ':completion:most-recent-*:*' hidden all
zstyle ':completion:(match-word|most-recent-*):*' match-original both
zstyle ':completion:most-recent-file:*' file-patterns '*(.):normal\ files'
zstyle ':completion:most-recent-dir:*' file-patterns '*(/):directories'
bindkey '^Xm' most-recent-file
bindkey '^XM' most-recent-dir
zle -C most-recent-file menu-complete _generic
zle -C most-recent-dir menu-complete _generic

# fasd init
eval "$(fasd --init auto)"

cdpath=(. .. ~/Desktop ~/bin ~/docs ~/docs/img ~/tmp)
path=(~/bin $path)

fpath=(~/.dotfiles/functions $fpath)
autoload -U ~/.dotfiles/functions/*(:t)

setopt MULTIOS
setopt MENU_COMPLETE

# This makes cd=pushd
setopt AUTO_PUSHD

# This will use named dirs when possible
setopt AUTO_NAME_DIRS

# If we have a glob this will expand it
setopt GLOB_COMPLETE
setopt PUSHD_MINUS

# blank pushd goes to home
setopt PUSHD_TO_HOME

# use magic (this is default, but it can't hurt!)
setopt ZLE

setopt NO_HUP

# complete iven if is in the middle of name
setopt COMPLETE_IN_WORD

# use regular expressions
setopt CASE_MATCH

# share history between shell sessions
setopt APPEND_HISTORY

# adds history incrementally and share it across sessions
setopt INC_APPEND_HISTORY SHARE_HISTORY

export EDITOR='vim'
export VISUAL='vim'
export PAGER='less'

# Case insensitive globbing
setopt NO_CASE_GLOB

# Be Reasonable!
setopt NUMERIC_GLOB_SORT

# I don't know why I never set this before.
setopt EXTENDED_GLOB

# allow substituition inside prompt
setopt PROMPT_SUBST

# show history before executing them
setopt HIST_VERIFY

# sort things like log_001.txt log_002.txt log_009.txt
setopt NUMERICGLOBSORT

# move cursor between chars when typing '', "", (), [], and {}
magic-single-quotes() { if [[ $LBUFFER[-1] == \' ]]; then zle self-insert; zle .backward-char; else zle self-insert; fi }; bindkey \' magic-single-quotes
magic-double-quotes() { if [[ $LBUFFER[-1] == \" ]]; then zle self-insert; zle .backward-char; else zle self-insert; fi }; bindkey \" magic-double-quotes
magic-parentheses() { if [[ $LBUFFER[-1] == \( ]]; then zle self-insert; zle .backward-char; else zle self-insert; fi }; bindkey \) magic-parentheses
magic-square-brackets() { if [[ $LBUFFER[-1] == \[ ]]; then zle self-insert; zle .backward-char; else zle self-insert; fi }; bindkey \] magic-square-brackets
magic-curly-brackets() { if [[ $LBUFFER[-1] == \{ ]]; then zle self-insert; zle .backward-char; else zle self-insert; fi }; bindkey \} magic-curly-brackets
magic-angle-brackets() { if [[ $LBUFFER[-1] == \< ]]; then zle self-insert; zle .backward-char; else zle self-insert; fi }; bindkey \> magic-angle-brackets
zle -N magic-single-quotes
zle -N magic-double-quotes
zle -N magic-parentheses
zle -N magic-square-brackets
zle -N magic-curly-brackets
zle -N magic-angle-brackets

# ctrl+b/f or ctrl+left/right : move word by word (backward/forward)
bindkey '^b' backward-word
bindkey '^f' forward-word
bindkey '^[[1;5D' backward-word
bindkey '^[[1;5C' forward-word

########### aliases #################
# aliases para fasd
alias a='fasd -a' # any
alias s='fasd -si' # show / search / select
alias d='fasd -d' # directory
alias f='fasd -f' # file
alias vf='vim $(fasd -f)'
alias sd='fasd -sid' # interactive directory selection
alias sf='fasd -sif' # interactive file selection
alias z='fasd_cd -d' # cd, same functionality as j in autojump
alias zz='fasd_cd -d -i' # cd with interactive selection
alias v='f -e vim' # open file with vim
alias v='f -t -e vim -b viminfo'
alias o='a -e xdg-open' # quick opening files with xdg-open
alias _!='fc -e "sed -i -e \"s/^/sudo /\""' # sudo last command

# this alias depends on prezto's archive utility
alias x='unarchive'

function rationalize-dot {
if [[ $LBUFFER = *.. ]]; then
    LBUFFER+=/..
else
    LBUFFER+=.
fi
}
zle -N rationalize-dot
bindkey . rationalize-dot

# Listen to Air Traffic Control, used to be scripts.
alias GIG='mplayer http://rio.radioetvweb.com.br:8246'
alias GRU='mplayer http://rio.radioetvweb.com.br:8298'
alias POA='mplayer http://rio.radioetvweb.com.br:8282'
alias CGH='mplayer http://rio.radioetvweb.com.br:8300'
alias classic='mplayer http://80.237.154.83:8120'
# watch aljazeera
alias alj='rtmpdump -v -r "rtmp://aljazeeraflashlivefs.fplive.net/aljazeeraflashlive-live/aljazeera_eng_med" | mplayer -'

alias lad='ls -d -- .*(/)'				# only show dot-directories
alias lsa='ls -a -- .*(.)'				# only show dot-files
alias lsd='ls -d -- *(/)'				  # only show directories
alias -s txt=vim
alias -s text=vim
alias gril='grep -irl'
alias -g C='| wc -l'
alias -g L='| less -r'
alias -g T='| tail'
alias -g H='| head'
alias -g G='| grep -i'
alias -g V='| gvim -'
alias -g X='| xargs'
alias -g N='*/**(.om[1])'
alias -g ND='./**/*(/om[1])' # newest directory
alias -g NF='./**/*(.om[1])' # newest file
alias -g latest='./**/*(.om[1])' # newest file | also Ctrl-x Ctrl-m
alias -g NUL="> /dev/null 2>&1"
alias -g DN="> /dev/null 2>&1"
alias -g LC='| tr A-Z a-z'
alias -g UL="| sed 's, ,_,g'"
alias -g ULC="| tr A-Z a-z | sed 's, ,_,g'"
alias pnf='mpg123 ./**/*(.om[1])'
alias install='sudo apt-fast -y install'
mktbz () { tar cvjf "${1%%/}.tar.bz2" "${1%%/}/";}
groove-dl-cli(){ python2.7 /usr/share/groove-dl/groove.py "$@" ;}
man2pdf () { man -w $1 && man -t $1 | ps2pdf - $1.pdf; }
alias ping='ping -n -c 4 -i 0.2 -W1'
alias shell='echo ${SHELL:t}'
alias lvim="vim -c \"normal '0\""
alias vnew='cd && vim */**(.om[1])'
alias ls='ls --color'
alias path="echo ${PATH//:/$'\n'}"
alias ssh='ssh -C'
alias scp='scp -r'
alias less='less -r'
alias compilalivro='make clean; make && make show'
alias 4shared='cadaver http://webdav.4shared.com/'
alias yd='youtube-dl --write-auto-sub `xclip -o`'
########### end aliases #################

# functions
yt () mplayer -fs -quiet $(youtube-dl -g "$1")
gsend() { git commit -am "$1" && git push ;}
lowerstring() { echo "${*}" | awk '{print tolower($0)}' ;}
lower (){ echo ${@:l} }  # this versio only works in zsh
upper (){ echo ${@:u} }  # this versio only works in zsh
expandurl() { curl -sIL $1 | awk '/^Location/ || /^Localização/ {print $2}' ; }
calc(){ echo "scale=2;$@" | bc;}
alias calc='noglob calc'
ff () { find . -type f -iname '*'"$@"'*' ; }
mkcd() { mkdir -p "$@" && cd $_; }
decToBin () { echo "ibase=10; obase=2; $1" | bc; }
decTohex () { bc <<< "obase=16; $1"; }
biggest (){ du -k * | sort -nr | cut -f2 | head -20 | xargs -d "\n" du -sh; }
top10 () { history | awk '{print $2}' | sort | uniq -c | sort -rn | head ; }
beep () { echo -e -n \\a ; }
dict() { curl "dict://dict.org/d:${1%%/}";}
cmdfu(){ curl "http://www.commandlinefu.com/commands/matching/$@/$(echo -n $@ | openssl base64)/plaintext"; }

youtube-mp3 () {
    # get mp3 from youtube
    command -v ffmpeg >/dev/null && youtube-dl --restrict-filenames --extract-audio --audio-format=mp3 --audio-quality 320k "${1}"
    [[ $? = 1 ]] && echo "instale o programa ffmpeg para poder converter para mp3"
}

insert_sudo () { zle beginning-of-line; zle -U "sudo " }
zle -N insert-sudo insert_sudo
bindkey "^[s" insert-sudo

# use magic-space
bindkey ' ' magic-space

# some radios using mplayer
alias wnyc="mplayer -playlist http://www.wnyc.org/stream/wnyc-fm939/mp3.pls"
alias wfiu="mplayer -playlist http://hannibal.ucs.indiana.edu:8000/wfiu_hi.m3u"
alias news="mplayer -playlist http://minnesota.publicradio.org/tools/play/streams/news.pls" # MPR News
alias npr='mplayer -playlist http://www.npr.org/templates/dmg/dmg.php\?getProgramStream\=true\&NPRMediaPref\=WM'
alias current="mplayer -playlist http://minnesota.publicradio.org/tools/play/streams/the_current.pls" # The Current
alias classical="mplayer -playlist http://minnesota.publicradio.org/tools/play/streams/classical.pls" # Classical MPR
alias jazz='mplayer http://streamerepsilon.jazz.fm:8000'
alias beatles='mplayer http://uplink.duplexfx.com:8062'
alias localcurrent="mplayer -playlist http://minnesota.publicradio.org/tools/play/streams/local.pls" # Local Current
alias heartland="mplayer -playlist http://minnesota.publicradio.org/tools/play/streams/radio_heartland.pls" # MPR Radio Heartland
alias wonderground="mplayer http://wondergroundstream2.publicradio.org/wonderground" # MPR Wonderground Windows Media
alias choral="mplayer -playlist http://choralstream1.publicradio.org/choral.m3u" # Clasical MPR Choral
alias wefunk="mplayer -playlist http://www.wefunkradio.com/play/shoutcast.pls" # WEFUNK Radio MP3 64K
alias sleepbot="mplayer -playlist http://sleepbot.com/ambience/cgi/listen.cgi/listen.pls" # Sleepbot Environmental Broadcast 56K MP3
alias groovesalad="mplayer -playlist http://somafm.com/groovesalad130.pls" # Soma FM Groove Salad iTunes AAC 128K
alias dronezone="mplayer -playlist http://somafm.com/dronezone130.pls" # Soma FM Drone Zone iTunes AAC 128K
alias lush="mplayer -playlist http://somafm.com/lush130.pls" # Soma FM Lush iTunes AAC 128K
alias sonicuniverse="mplayer -playlist http://somafm.com/sonicuniverse.pls" # Soma FM Sonic Universe iTunes AAC 128K

dumpwnyc () {
    mplayer -playlist "http://www.wnyc.org/stream/wnyc-fm939/mp3.pls" -dumpstream -dumpfile wnyc.mp3
}

record(){
    # references:
    # http://mocha.freeshell.org/audio.html
    # http://stackoverflow.com/questions/3601515/how-to-check-if-a-variable-is-set-in-bash
    [ -z "$1" ] && name="output.mp3" || name="$1"
    arecord -v -f cd -t raw | lame -r - $name
}

# firefox improviments
# disalbe rendering fonts in firefox to free memory
export MOZ_DISABLE_PANGO='1'
